types
    liste, place
utilise
    entier, élément
opérations
    listevide : → liste
    accès : liste × entier → place
    contenu : place → élément
    ième : liste × entier → élément
    longueur : liste → entier
    supprimer : liste × entier → liste
    insérer : liste x entier x élément → liste
    succ : place → place
préconditions
    accès(l,k) est-défini-ssi l 6= listevide & 1  k  longueur(l)
    supprimer(l,k) est-défini-ssi l 6= listevide & 1  k  longueur(l)
    insérer(l,k,e) est-défini-ssi 1  k  longueur(l)+1
axiomes
    longueur(listevide) = 0
    longueur(supprimer(l,k)) = longueur(l)-1
    longueur(insérer(l,k,e)) = longueur(l)+1
    1  i ≺ k ⇒ ième(supprimer(l,k),i) = ième(l,i)
    k  i  longueur(l)-1 ⇒ ième(insérer(l,k,e),i) = ième(l,i-1)
    1  i ≺ k ⇒ ième(insérer(l,k,e),i) = ième(l,i)
    k = i ⇒ ième(insérer(l,k,e),i) = e
    k ≺ i  longueur(l)+1 ⇒ ième(supprimer(l,k),i) = ième(l,i+1)
    contenu(accès(l,k)) = ième(l,k)
    succ(accès(l,k)) = accès(l,k+1)
avec
    liste l
    entier i,k
    élément e